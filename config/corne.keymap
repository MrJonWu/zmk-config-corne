/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        left-parens {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <16 17>;
        };

        right-parens {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <18 19>;
        };

        left-bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <4 5>;
        };

        right-bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <6 7>;
        };

        left-brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <28 29>;
        };

        right-brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <30 31>;
        };

        equals {
            bindings = <&kp KP_EQUAL>;
            key-positions = <1 3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&mt GRAVE TAB  &kp Q  &kp W  &kp E             &kp R             &kp T    &kp Y        &kp U      &kp I      &kp O    &kp P     &kp BSPC
&kp ESCAPE     &kp A  &kp S  &kp D             &kp F             &kp G    &kp H        &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT      &kp Z  &kp X  &kp C             &kp V             &kp B    &kp N        &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp ENTER
                             &kp LEFT_CONTROL  &kp LEFT_COMMAND  &mo 1    &lt 2 SPACE  &kp SPACE  &mo 3
            >;
        };

        Number {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCL  &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT    &kp CARET  &kp AMPS  &kp ASTRK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BSPC
&trans  &kp N1    &kp N2  &kp N3    &kp N4      &kp N5         &kp N6     &kp N7    &kp N8     &kp N9                &kp N0                 &trans
&trans  &trans    &trans  &trans    &trans      &trans         &trans     &trans    &trans     &trans                &trans                 &trans
                          &trans    &trans      &trans         &trans     &trans    &trans
            >;
        };

        Symbol {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE  &kp EXCL   &kp AT    &kp HASH   &kp DLLR        &kp PRCNT           &kp CARET          &kp AMPS         &kp ASTRK      &kp LPAR   &kp RPAR   &kp BSPC
&trans     &kp TILDE  &kp HASH  &kp SLASH  &kp LEFT_BRACE  &kp LEFT_BRACKET    &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp BACKSLASH  &kp MINUS  &kp PLUS   &kp PIPE
&trans     &trans     &trans    &trans     &trans          &trans              &trans             &trans           &trans         &kp UNDER  &kp EQUAL  &trans
                                &trans     &trans          &trans              &trans             &trans           &trans
            >;
        };

        Function {
            bindings = <
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans    &trans  &kp PAGE_UP    &trans    &kp K_COPY    &kp HOME   &kp DEL
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans    &trans  &kp LEFT       &kp DOWN  &kp UP_ARROW  &kp RIGHT  &trans
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans    &trans  &kp PAGE_DOWN  &trans    &trans        &kp END    &trans
                         &trans   &trans   &trans    &trans  &trans         &trans
            >;
        };

        Media {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans      &trans            &trans        &trans           &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans      &kp C_PREV        &kp C_VOL_DN  &kp C_VOLUME_UP  &kp C_NEXT    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &bt BT_CLR  &bt BT_SEL 0      &bt BT_SEL 1  &bt BT_SEL 2     &bt BT_SEL 3  &trans
                        &trans  &trans  &trans    &kp C_STOP  &kp C_PLAY_PAUSE  &kp C_MUTE
            >;
        };
    };
};
